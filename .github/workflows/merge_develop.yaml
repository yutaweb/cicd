name: Deploy to staging env when merged staging

on:
  push:
    branches:
      - develop

env:
  AWS_ASSUME_ROLE: arn:aws:iam::022522308257:role/s3-pd-cd-role
  AWS_REGION: ap-northeast-1
  AWS_S3_BUCKET: cicd-test-from-github-actions

jobs:
  run:
    name: CD for staging merge
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@master
      - name: setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "18.x"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install
        run: npm ci

      - name: gatsby_staging_environment_build
        run: npm run staging

      - name: copy_required_data_to_public
        run: |
          chmod +x ./set_env_staging.sh
          ./set_env_staging.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: delete s3 objects
        run: aws s3 rm s3://${{ env.AWS_S3_BUCKET }} --recursive --quiet

      - name: deploy to s3
        run: aws s3 cp ./public s3://${{ env.AWS_S3_BUCKET }} --recursive --quiet

      - name: notify result to slack
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*Deployment - Staging Environment*"
          mention_if: "always"
          channel: "#github_actions_pdbiz_lp"
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}